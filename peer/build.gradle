description = 'The Peer Bot'

dependencies {
    compile project(':peer-rpc')
    compile libs.commons_lang
    compile "org.xerial:sqlite-jdbc:3.6.7"
    compile "httpunit:httpunit:1.7"
    compile libs.bot_dispatch_bot
    compile libs.simple_blobstore_client
    compile libs.guice
    compile libs.guice_assisted_inject
    compile libs.guava

    testCompile "junit:junit:3.8.1"
    testCompile "org.jmock:jmock:2.5.1"

	//For cobertura runtime only
    testRuntime libs.slf4j_log4j12
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task peerRun(dependsOn: 'classes', type: JavaExec) {
    main = 'com.googlecode.fspotcloud.peer.Main'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'db', 'src/test/resources/photos.db'
    systemProperty 'endpoint', "localhost:8080"
    systemProperty 'bot.secret', "${bot_secret}"
    systemProperty 'pause', '2'
    systemProperty 'photo.dir.original', "file:///home/steven/Photos"
    systemProperty 'photo.dir.override', "file://${projectDir}/../peer/src/test/resources/Photos"
}

task peerStop(type: Exec) {
    commandLine "telnet", "localhost", "4444"
    ignoreExitValue = true
}

task peerRun2(dependsOn: 'classes') << {
    ant.java(fork: true, classname: 'com.googlecode.fspotcloud.peer.Main', failonerror: true) {
        classpath {
            path(path: sourceSets.main.runtimeClasspath.asPath)
        }
        arg(value: '-Ddb')
        arg(value: 'src/test/resources/photos.db')
        arg(value: '-Dendpoint')
        arg(value: "localhost:8080")
        arg(value: '-Dbot.secret')
        arg(value: "${bot_secret}")
        arg(value: '-Dpause')
        arg(value: '2')
        arg(value: '-Dphoto.dir.original')
        arg(value: "file:///home/steven/Photos")
        arg(value: '-Dphoto.dir.override')
        arg(value: "file://${projectDir}/../peer/src/test/resources/Photos")
    }
}
