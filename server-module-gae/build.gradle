description = 'F-SpotCloud Server GAE Configuration'

configurations {
}

dependencies {
    compile project(':server')
    compile project(':model-jpa-gae')
    compile project(':user-service-gae')
    compile libs.inject
    compile libs.guice
    compile libs.guice_assisted_inject
    compile("com.googlecode.taskqueue-dispatch:dispatch:${taskqueue_dispatch_version}") {
        exclude(module: 'gwt-user')
    }
    compile("com.googlecode.bot-dispatch:command-jpa-gae:${bot_dispatch_version}") {
        exclude(module: 'gwt-user')
    }
    compile("com.googlecode.bot-dispatch:command-jpa:${bot_dispatch_version}") {
        exclude(module: 'gwt-user')
    }
    compile libs.bot_dispatch_command_api
    compile libs.servlet_spec
    compile libs.simple_blobstore_gae

    testCompile project(':user-service-openid')
    testCompile project(':peer')
    testCompile project(':user-service-api')
    testCompile project(':test-util')
    testCompile project(path: ':user-service-api', configuration: 'testFixtures')
    testCompile project(path: ':peer-server-integration', configuration: 'testCompile')
    testCompile("com.googlecode.taskqueue-dispatch:direct:${taskqueue_dispatch_version}") {
        exclude(module: 'gwt-user')
    }
    testCompile libs.guiceberry
    testCompile libs.guava_testlib
    testCompile libs.gae_testing
    testCompile libs.junit
    testCompile libs.test_ng
    testCompile libs.mockito
}

task unpackTest << {
    def myTests = file("../peer-server-integration/build/libs/peer-server-integration-${version}-tests.jar")
    ant.unjar(dest: "$buildDir/classes/test", src: myTests)
}

test {
	exclude "*"
}

task testShotwell(type:Test, dependsOn: [unpackTest]) {
	useTestNG {
		outputDirectory = file("$buildDir/shotwell")
	}
	systemProperty 'GuiceBerryEnvSelectorOverride_com.googlecode.fspotcloud.server.admin.integration.NoAuthPlaceHolderIntegrationModule',
        'com.googlecode.fspotcloud.server.admin.integration.GaeNoAuthShotwellIntegrationModule'
    systemProperty 'GuiceBerryEnvSelectorOverride_com.googlecode.fspotcloud.server.admin.integration.PlaceHolderIntegrationModule',
        'com.googlecode.fspotcloud.server.admin.integration.GaeIntegrationModule'
    systemProperty 'fspotcloud.test.shotwell', 'true'
    systemProperty 'photo.dir.original', '//home/fspot/Photos'
    testLogging.showStandardStreams = true
    reports.junitXml.destination =file("${project.testResultsDir}/shotwell")
    reports.html.destination =file("${project.testResultsDir}/shotwell")
}


task testFSpot(type:Test, dependsOn: [unpackTest]) {
	useTestNG {
		outputDirectory = file("$buildDir/fspot")
	}
	systemProperty 'photo.dir.original', '//home/steven/Photos'
    systemProperty 'GuiceBerryEnvSelectorOverride_com.googlecode.fspotcloud.server.admin.integration.NoAuthPlaceHolderIntegrationModule',
        'com.googlecode.fspotcloud.server.admin.integration.GaeNoAuthFSpotIntegrationModule'
    systemProperty 'GuiceBerryEnvSelectorOverride_com.googlecode.fspotcloud.server.admin.integration.PlaceHolderIntegrationModule',
        'com.googlecode.fspotcloud.server.admin.integration.GaeIntegrationModule'
    //testLogging.showStandardStreams = true
    reports.junitXml.destination =file("${project.testResultsDir}/fspot")
    reports.html.destination =file("${project.testResultsDir}/fspot")
}

test.dependsOn testShotwell, testFSpot
test.useTestNG()

