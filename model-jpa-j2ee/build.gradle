description = 'Model JPA J2EE Implementation'

configurations {
    daoTests
    genidDaoTests
    modelTests
    testCompile.extendsFrom(genidDaoTests, daoTests, modelTests)
    testRuntime
}

dependencies {
    compile project(':rpc')
    compile project(':model-api')
    compile project(':model-jpa')
    compile libs.commons_lang
    compile libs.inject
    compile libs.guice
    compile libs.derby_all
    compile libs.jta
    compile libs.gwt_dispatch
    compile libs.jdo_api
    compile libs.guice_servlet
    compile libs.simple_blobstore_j2ee

    testCompile project(path: ":model-api", configuration: "testCompile")
    testCompile libs.guiceberry
    testCompile libs.junit
    testCompile libs.mockito
    testCompile libs.guava_testlib

    daoTests libs.simple_jpa_dao_namedid_test
    
    genidDaoTests libs.simple_jpa_dao_genid_test, libs.simple_jpa_dao_base_test
    
    modelTests files("../model-api/build/libs/model-api-${version}-tests.jar")
}
task deleteDB(type: Delete) {
    delete 'MODELJPA', 'runtime', 'derby.log'
}

task unpackTest << {
    mkdir "$buildDir/genid-dao-test"
    def myTests = configurations.genidDaoTests.files.iterator().next()
    ant.unjar(dest: "$buildDir/genid-dao-test", src: myTests)
    mkdir "$buildDir/dao-test"
    myTests = configurations.daoTests.files.iterator().next()
    ant.unjar(dest: "$buildDir/dao-test", src: myTests)
    mkdir "$buildDir/model-test"
    myTests = configurations.modelTests.files.iterator().next()
    ant.unjar(dest: "$buildDir/model-test", src: myTests)
}
task userDaoTest(type: Test, dependsOn: [classes, unpackTest]) {

    testClassesDir = file("$buildDir/dao-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simplejpadao.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.server.model.test.UserGuiceBerryEnv'
    reports.junitXml.destination =file("${project.testResultsDir}/user")
    reports.html.destination =file("${project.testResultsDir}/user")
}

task userGroupDaoTest(type: Test, dependsOn: [classes, unpackTest]) {

    testClassesDir = file("$buildDir/genid-dao-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simplejpadao.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.server.model.test.UserGroupGuiceBerryEnv'
    reports.junitXml.destination =file("${project.testResultsDir}/usergroup")
    reports.html.destination =file("${project.testResultsDir}/usergroup")
}

task photoDaoTest(type: Test, dependsOn: [classes, unpackTest]) {

    testClassesDir = file("$buildDir/dao-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simplejpadao.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.server.model.test.PhotoGuiceBerryEnv'
    reports.junitXml.destination =file("${project.testResultsDir}/photo")
    reports.html.destination =file("${project.testResultsDir}/photo")

}

task tagDaoTest(type: Test, dependsOn: [classes, unpackTest]) {
    testClassesDir = file("$buildDir/dao-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simplejpadao.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.server.model.test.TagGuiceBerryEnv'
    reports.junitXml.destination =file("${project.testResultsDir}/tag")
    reports.html.destination =file("${project.testResultsDir}/tag")
}

task peerDatabaseDaoTest(type: Test, dependsOn: [classes, unpackTest]) {
    testClassesDir = file("$buildDir/dao-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simplejpadao.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.server.model.test.PeerDatabaseGuiceBerryEnv'
    reports.junitXml.destination =file("${project.testResultsDir}/peerdatabase")
    reports.html.destination =file("${project.testResultsDir}/peerdatabase")
}

task modelTest(type: Test, dependsOn: [classes, unpackTest]) {
    testClassesDir = file("$buildDir/model-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.fspotcloud.model.api.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.server.model.test.J2eeModelGuiceBerryEnv'
    reports.junitXml.destination =file("${project.testResultsDir}/model")
    reports.html.destination =file("${project.testResultsDir}/model")
}

test.dependsOn photoDaoTest, tagDaoTest, peerDatabaseDaoTest, modelTest, userDaoTest, userGroupDaoTest
clean.dependsOn deleteDB

